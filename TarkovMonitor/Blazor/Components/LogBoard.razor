@using Humanizer
@inject LogRepository logRepository
<MudStack Reverse="true" Justify="Justify.FlexStart" AlignItems="AlignItems.Center" Class="ma-3">
    @if (logRepository.Logs.Count == 0)
    {
        <MudAlert Severity="Severity.Info">No new logs have been seen since launching the monitor.</MudAlert>
    }else{
        @foreach (LogLine line in logRepository.Logs)
        {
            <div class="">
                <div class="d-block">
                    <MudPaper Class="d-flex align-enter py-1 px-3 mud-theme-secondary" Elevation="0" Square>
                        <span class="my-auto" style="white-space: pre-wrap">
                            @line.Message
                        </span>
                    </MudPaper>
                </div>
                <div class="d-flex justify-end mt-1">
                    <MudText Style="font-size: .8em">@line.Time.ToUniversalTime().Humanize()</MudText>
                </div>
            </div>
        }
    }
</MudStack>

@code {
    protected override void OnInitialized()
    {
        base.OnInitialized();

        logRepository.newLog += LogAdded;
    }

    private void LogAdded(object? sender, NewLogLineArgs e)
    {
        InvokeAsync(() => StateHasChanged());
    }
}
